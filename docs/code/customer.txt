"""
customer.txt documentation

This module contains the definition for the Customer class. The class emulates a
real-life bank customer, with attributes and functions that store information about
the customer and its functions.
Example:
>>>from customer import Customer
>>>from random import randint
>>>new_cust = Account("John Doe", "01/01/17", "215-215-2152")
>>>new_cust.get_name()
>>>John Doe
"""
"""
class Customer(Person):
    """
    Implementation of a bank customer.

    Attributes:
        _name (str): the holder of the account.

        _created_on(str):String representation of the account's creation date.

        _account_name (str):

        _account_number (int): the unique numerical identifier of the bank account.

        _account_type (str): A string denoting the type of the account
        (for this implementation, either savings or checking)

        _balance (double): The balance of the bank account.

    """

    def __init__(self, holder, created_on, account_name, account_number, account_type, balance=0.0):

        Args:
            holder (str): the value to be assigned to _holder
            created_on (str): the value to be assigned to _created_on
            account_name(str): the value to be assigned to _account_name
            balance (double): the value to be assigned to _balance - by default,
            this value is set to 0.0.
        """


    def get_holder(self):
      Args:
          None

    def get_created_on(self):
      Args:
          None

    def get_account_name(self):
      Args:
          None


    def get_account_number(self):
      Args:
          None

    def get_account_type(self):
      Args:
          None

    def get_balance(self):
      Args:
          None

    def update_balance(self, amount):
      Args:
          amount (double): the amount to be added/deducted from the account balance;
          Can take on a positive or a negative value
"""
