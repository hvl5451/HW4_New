"""
bank.txt documentation

This module contains the definition for the Customer class. The class emulates a real-life bank , and has attributes and functions that store information about the the customer and their bank accounts, employees, and other things like the name of the bank and hours open. Customers and employees are added to the bank attributes manually.

Example:
>>>from employee import Employee
>>>from customer import Customer 
>>>import datetime
>>>new_bank = Bank(“bank name”)
>>>new_bank.isopen()
bank name is bank name

Attributes:
	None
Todo:
	None

"""
"""
class Customer(Person):
"""
Implementation of a bank
Attributes:
	__bank_name
	__bank_openhours
	__bank_closehours
	__customer_list
	__employee_list
"""

    def __init__(self, bank_name):
	Args:
	bank_name(str): value to be set to bank

def get_bankname(self):
	Args:
		None

def get_customer_list(self):
	Args:
		None

def get_employee_list(self):
	Args:
		None

def timeopen(self, day):
	Args:
		day(int): an int from 1-6 that corresponds to a key in bank_openhours or 
bank_closehours dictionaries

def get_hoursopen(self):
	Args:
		None

def change_timeopen(self, day, timeopen, timeclose):
	Args:
		day(int): an int from 1-6 that corresponds to a key in bank_openhours or 
bank_closehours dictionaries
		timeopen(datetime.time): a datetime.time object used to replace the value in the 
						bank_openhours dictionary
		timeclose(datetime.time): a datetime.time object used to replace the value in the 
bank_closehours dictionary

def add_customer(self, customer_obj):
	Args:
		customer_obj(customer): customer object that will be added to the customer_list 
dictionary

def remove_customer(self, customer_obj):
	Args:
		customer_obj(customer):customer object that will be removed from the 
customer_list dictionary

def add_employee(self, employee_obj):
	Args:
		employee_obj(employee): employee object that will be added to the 
						employee_list dictionary
def remove_employee(self, employee_obj):
	Args:
		employee_obj(employee): employee object that will be added to the 
						employee_list dictionary
def isopen(self):
	Args:
		None
