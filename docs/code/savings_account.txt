"""
savings_account.txt documentation

This module contains the definition for the SavingsAccount class. The class emulates a
real-life bank savings account, with attributes and functions that store information about
the account and its holder, as well as withdrawal and deposit functionalities.

Example:
>>>from savings_account import SavingsAccount
>>>from random import randint
>>>new_account = SavingsAccount("John Doe", "01/01/17", "John Doe Savings 001", randint(1, 1000000))
>>>new_account.get_holder()
>>>John Doe
"""
"""
Attributes:
    None

Todo:
    None

"""
"""
class (object):
    """
    Implementation of a conventional bank savings account.

    Attributes:
        

    """

    def __init__(self, holder, created_on, account_name, account_number, account_type, balance=0.0):

        Args:
            holder (str): the value to be assigned to _holder
            created_on (str): the value to be assigned to _created_on
            account_name(str): the value to be assigned to _account_name
            balance (double): the value to be assigned to _balance - by default,
            this value is set to 0.0.
        """


    def get_holder(self):
      Args:
          None

    def get_created_on(self):
      Args:
          None

    def get_account_name(self):
      Args:
          None


    def get_account_number(self):
      Args:
          None

    def get_account_type(self):
      Args:
          None

    def get_balance(self):
      Args:
          None

    def update_balance(self, amount):
      Args:
          amount (double): the amount to be added/deducted from the account balance;
          Can take on a positive or a negative value
"""
